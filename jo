from matplotlib import pyplot as plt
import numpy as np
import csv
import math

class Plot3DLine:

    def plot(self, filename):
        self.x_data, self.y_data, self.z_data = self.read_csv_data(filename)

        # Create a figure and 3D axes
        fig = plt.figure()
        ax = fig.add_subplot(111, projection='3d')

        # Plot the 3D line
        ax.plot(self.x_data, self.y_data, self.z_data)

        # Set axis labels and title
        ax.set_xlabel("X-axis")
        ax.set_ylabel("Y-axis")
        ax.set_zlabel("Z-axis")
        ax.set_title("3D Spiral Plot from CSV")

        # Set custom limits for the axes
        ax.set_xlim([0, 30])  # Example x-axis range
        ax.set_ylim([0, 30])  # Example y-axis range
        ax.set_zlim([0, 30])  # Example z-axis range

        plt.show()

    def spiral(self, start_angle=0, step_size=0.1):
        total_turns = 3  # Total number of complete 360-degree turns
        transition_turns = 2  # Number of turns with increasing radius
        constant_radius = 5  # Constant radius after transition

        x_data = []
        y_data = []
        z_data = []

        theta = 0
        radius = 0  # Initial radius
        total_height = 15
        base = 0.33*total_height
        transition_angle = transition_turns * 2 * math.pi  # Transition angle

        total_steps = int((total_turns * 2 * math.pi) / step_size)
        height_increment = 300 / total_steps  # Increment in height per step

        while theta < start_angle + total_turns * 2 * math.pi:
            if theta < base:
                radius = 0
            else:
                if theta < transition_angle:
                    radius = constant_radius * ((theta - base) / (transition_angle - base))
                else:
                    radius = constant_radius

            # Calculate coordinates
            x = radius * math.cos(theta)+ constant_radius
            y = radius * math.sin(theta)+ constant_radius
            z = theta * height_increment

            x_data.append(x)
            y_data.append(y)
            z_data.append(z)

            theta += step_size

        return list(zip(x_data, y_data, z_data))


data_reader = Plot3DLine()
dd = data_reader.spiral()
data_reader.plot(dd)
